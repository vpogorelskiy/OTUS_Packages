//
// MoviesSearchAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class MoviesSearchAPI {

    /**
     * enum for parameter type
     */
    public enum ModelType_getMovies: String, CaseIterable {
        case movies = "movies"
        case series = "series"
        case episode = "episode"
    }

    /**
     Movies list
     
     - parameter s: (query) Title of movie or series 
     - parameter apiKey: (query) Your API Key 
     - parameter type: (query) Return movie, series or episode (optional)
     - parameter page: (query) Page number to return (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getMovies(s: String, apiKey: String, type: ModelType_getMovies? = nil, page: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClient.apiResponseQueue, completion: @escaping ((_ data: MoviesResponse?, _ error: Error?) -> Void)) {
        getMoviesWithRequestBuilder(s: s, apiKey: apiKey, type: type, page: page).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Movies list
     - GET /?s
     - parameter s: (query) Title of movie or series 
     - parameter apiKey: (query) Your API Key 
     - parameter type: (query) Return movie, series or episode (optional)
     - parameter page: (query) Page number to return (optional)
     - returns: RequestBuilder<MoviesResponse> 
     */
    open class func getMoviesWithRequestBuilder(s: String, apiKey: String, type: ModelType_getMovies? = nil, page: Int? = nil) -> RequestBuilder<MoviesResponse> {
        let localVariablePath = "/?s"
        let localVariableURLString = OpenAPIClient.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "s": s.encodeToJSON(),
            "apiKey": apiKey.encodeToJSON(),
            "type": type?.encodeToJSON(),
            "page": page?.encodeToJSON(),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<MoviesResponse>.Type = OpenAPIClient.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters)
    }
}
