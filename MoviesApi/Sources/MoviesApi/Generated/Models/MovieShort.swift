//
// MovieShort.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct MovieShort: Codable, Hashable {

    public var title: String?
    public var year: String?
    public var imdbID: String
    public var type: String?
    public var poster: String?

    public init(title: String? = nil, year: String? = nil, imdbID: String, type: String? = nil, poster: String? = nil) {
        self.title = title
        self.year = year
        self.imdbID = imdbID
        self.type = type
        self.poster = poster
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case title = "Title"
        case year = "Year"
        case imdbID
        case type = "Type"
        case poster = "Poster"
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(title, forKey: .title)
        try container.encodeIfPresent(year, forKey: .year)
        try container.encode(imdbID, forKey: .imdbID)
        try container.encodeIfPresent(type, forKey: .type)
        try container.encodeIfPresent(poster, forKey: .poster)
    }
}

