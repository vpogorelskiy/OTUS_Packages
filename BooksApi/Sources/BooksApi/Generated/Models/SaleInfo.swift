//
// SaleInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct SaleInfo: Codable, Hashable {

    public var country: String?
    public var saleability: String?
    public var isEbook: Bool?
    public var listPrice: SaleInfoListPrice?
    public var retailPrice: SaleInfoListPrice?
    public var buyLink: String?
    public var offers: [SaleInfoOffers]?

    public init(country: String? = nil, saleability: String? = nil, isEbook: Bool? = nil, listPrice: SaleInfoListPrice? = nil, retailPrice: SaleInfoListPrice? = nil, buyLink: String? = nil, offers: [SaleInfoOffers]? = nil) {
        self.country = country
        self.saleability = saleability
        self.isEbook = isEbook
        self.listPrice = listPrice
        self.retailPrice = retailPrice
        self.buyLink = buyLink
        self.offers = offers
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case country
        case saleability
        case isEbook
        case listPrice
        case retailPrice
        case buyLink
        case offers
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(country, forKey: .country)
        try container.encodeIfPresent(saleability, forKey: .saleability)
        try container.encodeIfPresent(isEbook, forKey: .isEbook)
        try container.encodeIfPresent(listPrice, forKey: .listPrice)
        try container.encodeIfPresent(retailPrice, forKey: .retailPrice)
        try container.encodeIfPresent(buyLink, forKey: .buyLink)
        try container.encodeIfPresent(offers, forKey: .offers)
    }
}

